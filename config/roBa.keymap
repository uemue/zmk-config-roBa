#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp E             &kp R         &kp T                                                  &kp Y            &kp U        &lt 5 I           &kp O           &kp P
&kp A             &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LCTRL F   &kp G        &kp LC(LG(LEFT_ARROW))       &kp LC(C)    &kp H            &mt LCTRL J  &mt LEFT_SHIFT K  &mt LEFT_ALT L  &kp MINUS
&mt LEFT_SHIFT Z  &kp X           &kp C             &kp V         &kp B        &kp LC(LG(RIGHT_ARROW))      &kp LC(V)    &kp N            &kp M        &kp COMMA         &kp DOT         &kp SLASH
&kp LCTRL         &kp LEFT_WIN    &kp LEFT_ALT      &kp LEFT_GUI  &lt 1 SPACE  &lt 2 TAB                    &lt 2 ENTER  &lt 1 BACKSPACE                                                 &mo 5
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM_ARROWS {
            bindings = <
&kp ESCAPE             &kp N7                 &kp NUMBER_8       &kp NUMBER_9        &trans                              &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &kp F4
&mt LEFT_GUI NUMBER_0  &mt LEFT_ALT NUMBER_4  &mt LEFT_SHIFT N5  &mt LCTRL NUMBER_6  &trans     &kp LG(TAB)      &trans  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp F2
&trans                 &kp NUMBER_1           &kp NUMBER_2       &kp NUMBER_3        &trans     &trans           &trans  &trans         &trans          &trans          &kp F7           &kp F10
&trans                 &trans                 &trans             &trans              &kp LANG2  &trans           &trans  &kp LANG1                                                       &trans
            >;
        };

        SYMBOLS {
            bindings = <
&trans    &kp LS(NUMBER_6)  &kp LS(INT3)      &kp LS(SQT)   &trans                                            &kp LS(NUMBER_4)  &kp LBKT                 &kp LS(RBKT)      &kp LS(NUHS)      &trans
&kp INT3  &kp LS(N2)        &kp LS(NUMBER_7)  &kp MINUS     &kp LS(MINUS)     &kp LA(LC(DELETE))      &trans  &kp LS(EQUAL)     &kp LS(INTERNATIONAL_1)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(LBKT)
&trans    &kp SEMI          &kp SQT           &kp LS(SEMI)  &kp LS(NUMBER_5)  &trans                  &trans  &kp EQUAL         &kp LS(NUMBER_3)         &kp RBKT          &kp NUHS          &kp LS(NUMBER_1)
&trans    &trans            &trans            &trans        &trans            &trans                  &trans  &kp DEL                                                                        &trans
            >;
        };

        NOT_USED {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R  &to_layer_0 T                      &to_layer_0 Y  &to_layer_0 U  &to_layer_0 I  &to_layer_0 O    &to_layer_0 P
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F  &to_layer_0 G  &trans      &trans  &to_layer_0 H  &to_layer_0 J  &to_layer_0 K  &to_layer_0 L    &to_layer_0 MINUS
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V  &to_layer_0 B  &trans      &trans  &to_layer_0 N  &mkp MB1       &mkp MB2       &to_layer_0 DOT  &to_layer_0 FSLH
&trans         &trans         &trans         &trans         &trans         &trans      &trans  &trans                                                        &trans
            >;
        };

        SCROLL {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &trans  &trans    &trans    &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans    &trans    &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans  &mkp MB4  &mkp MB5  &trans  &trans
&bt BT_CLR    &trans        &trans        &trans        &trans        &trans      &trans  &trans                              &trans
            >;
        };

        NOT_USED2 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
